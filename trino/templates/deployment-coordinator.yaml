apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trino.coordinator" . }}
  labels:
    app: {{ template "trino.name" . }}
    chart: {{ template "trino.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: coordinator
    {{- if .Values.commonLabels }}
    {{- tpl (toYaml .Values.commonLabels) . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "trino.name" . }}
      release: {{ .Release.Name }}
      component: coordinator
  template:
    metadata:
    {{- if or .Values.coordinator.annotations .Values.coordinator.metrics }}
      annotations:
      {{- with .Values.coordinator.annotations }}
        {{ toYaml . | nindent 8 }}
      {{- end}}
      {{- with .Values.coordinator.metrics }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: {{ .exportPort | quote }}
      {{- end }}
    {{- end }}
      labels:
        app: {{ template "trino.name" . }}
        release: {{ .Release.Name }}
        component: coordinator
        {{- if .Values.coordinator.labels }}
        {{- tpl (toYaml .Values.coordinator.labels) . | nindent 8 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- tpl (toYaml .Values.commonLabels) . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "trino.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        runAsUser: {{ .runAsUser }}
        runAsGroup: {{ .runAsGroup }}
        fsGroup: {{ .fsGroup }}
        fsGroupChangePolicy: {{ .fsGroupChangePolicy }}
      {{- end }}
      {{- if .Values.shareProcessNamespace.coordinator }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace.coordinator }}
      {{- end }}
      volumes:
        - name: run-volume
          emptyDir: { }
        {{- if .Values.logsVolume }}
        - name: logs-volume
          persistentVolumeClaim:
            claimName: {{ template "trino.fullname" . }}-logs
        {{- end }}
        {{- if .Values.coordinator.metrics }}
        - name: metrics-config-file
          configMap:
            name: {{ template "trino.metrics" . }}
        {{- end }}
        - name: config-volume
          configMap:
            name: {{ template "trino.coordinator" . }}
        - name: catalog-volume
          configMap:
            name: {{ template "trino.catalog" . }}
        - name: schemas-volume
          configMap:
            name: schemas-volume-coordinator
        {{- if .Values.accessControl }}{{- if eq .Values.accessControl.type "configmap" }}
        - name: access-control-volume
          configMap:
            name: trino-access-control-volume-coordinator
        {{- end }}{{- end }}
        {{- if eq .Values.server.config.authenticationType "PASSWORD" }}
        - name: password-volume
          secret:
            {{- if and .Values.auth .Values.auth.passwordAuthSecret }}
            secretName: {{ .Values.auth.passwordAuthSecret }}
            {{- else }}
            secretName: trino-password-authentication
            {{- end }}
            items:
              - key: password.db
                path: password.db
              {{- if .Values.auth.groups }}
              - key: group.db
                path: group.db
              {{- end }}
        {{- end }}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- range .Values.coordinator.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      {{- if .Values.initContainers.coordinator }}
      initContainers:
      {{- tpl (toYaml .Values.initContainers.coordinator) . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-coordinator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.server.node.dataDir }}/var/run
              name: run-volume
            {{- if .Values.logsVolume }}
            - mountPath: {{ .Values.server.node.dataDir }}/var/log
              name: logs-volume
            {{- end }}
            - mountPath: {{ .Values.server.config.path }}
              name: config-volume
            - mountPath: {{ .Values.server.config.path }}/catalog
              name: catalog-volume
            - mountPath: {{ .Values.kafka.mountPath }}
              name: schemas-volume
            {{- if .Values.accessControl }}{{- if eq .Values.accessControl.type "configmap" }}
            - mountPath: {{ .Values.server.config.path }}/access-control
              name: access-control-volume
            {{- end }}{{- end }}
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- range .Values.coordinator.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
            {{- if eq .Values.server.config.authenticationType "PASSWORD" }}
            - mountPath: {{ .Values.server.config.path }}/auth
              name: password-volume
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- range $key, $value := .Values.coordinator.additionalExposedPorts }}
            - name: {{ $value.name }}
              containerPort: {{ $value.port }}
              protocol: {{ $value.protocol }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: {{ .Values.coordinator.livenessProbe.initialDelaySeconds | default 20 }}
            periodSeconds: {{ .Values.coordinator.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.coordinator.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.coordinator.livenessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.coordinator.livenessProbe.successThreshold | default 1 }}
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: {{ .Values.coordinator.readinessProbe.initialDelaySeconds | default 20 }}
            periodSeconds: {{ .Values.coordinator.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.coordinator.readinessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.coordinator.readinessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.coordinator.readinessProbe.successThreshold | default 1 }}
          resources:
            {{- toYaml .Values.coordinator.resources | nindent 12 }}
      {{- with .Values.coordinator.metrics }}
        - name: metrics-exporter
          image: {{ .image }}
          imagePullPolicy: {{ .imagePullPolicy }}
          env:
            - name: JMX_METRICS_PORT
              value: {{ .exportPort | quote }}
            # - name: HOST_PORT
            #   value: {{ .jmxRmiRegistryPort | quote }}
            - name: JMX_CONFIG_FILE
              value: /mnt/trino.yaml
          ports:
            - name: metrics
              containerPort: {{ .exportPort }}
              protocol: TCP
          volumeMounts:
            - name: metrics-config-file
              mountPath: /mnt/trino.yaml
              subPath: trino.yaml
      {{- end }}
      {{- with .Values.sidecarContainers.coordinator }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- if .Values.coordinator.affinity }}
        {{- toYaml .Values.coordinator.affinity | nindent 8 }}
      {{- else }}
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ template "trino.name" . }}
                  release: {{ .Release.Name }}
              topologyKey: topology.kubernetes.io/zone
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ template "trino.name" . }}
                  release: {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- with .Values.coordinator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
